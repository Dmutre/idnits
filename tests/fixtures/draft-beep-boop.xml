<?xml version="1.0" encoding="utf-8"?>Conditions	to	check	for	any	input	type
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 3.1.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

<!ENTITY RFC4360 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4360.xml">
<!ENTITY RFC5701 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5701.xml">
<!ENTITY RFC7153 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7153.xml">
<!ENTITY RFC7432 SYSTEM "https://bib.ietf.org/public/rfc/bibxml/reference.RFC.7432.xml">
<!ENTITY I-D.ietf-bess-evpn-igmp-mld-proxy SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-bess-evpn-igmp-mld-proxy.xml">
<!ENTITY I-D.ietf-bess-bgp-multicast-controller SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-bess-bgp-multicast-controller.xml">
<!ENTITY I-D.ietf-idr-legacy-rtc SYSTEM "https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-idr-legacy-rtc.xml">
]>

<?rfc toc, sortrefs, symrefs, comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-idr-rt-derived-community-00" category="std" consensus="true">
  <front>
    <title abbrev="RT-derived ECs">Extended Communities Derived from Route Targets</title>

    <author initials="Z." surname="Zhang" fullname="Zhaohui Zhang">
      <organization>Juniper Networks</organization>
      <address>
        <email>zzhang@juniper.net</email>
      </address>
    </author>
    <author initials="J." surname="Haas" fullname="Jeff Haas">
      <organization>Juniper Networks</organization>
      <address>
        <email>jhaas@juniper.net</email>
      </address>
    </author>
    <author initials="K." surname="Patel" fullname="Keyur Patel">
      <organization>Arrcus</organization>
      <address>
        <email>keyur@arrcus.com</email>
      </address>
    </author>

    <date year="2023" month="August" day="08"/>

    <area>Internet</area>
    <workgroup>idr</workgroup>


    <abstract>


<t>This document specifies a way to derive an Extended Community from
a Route Target and describes some example use cases.</t>
<t>This document specifies a way to derive an <xref target="RFC4360"/> Extended Community from
a Route Target and describes some example use cases.</t>



    </abstract>

    <boilerplate>
      <section anchor="status-of-memo" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.1">
        <name slugifiedName="name-status-of-this-memo">Status of This Memo</name>
        <t indent="0" pn="section-boilerplate.1-1">
            This document is not an Internet Standards Track specification; it is
            published for examination, experimental implementation, and
            evaluation.
        </t>
        <t indent="0" pn="section-boilerplate.1-2">
            This document defines an Experimental Protocol for the Internet
            community.  This document is a product of the Internet Engineering
            Task Force (IETF).  It represents the consensus of the IETF community.
            It has received public review and has been approved for publication
            by the Internet Engineering Steering Group (IESG).  Not all documents
            approved by the IESG are candidates for any level of Internet
            Standard; see Section 2 of RFC 7841.
        </t>
        <t indent="0" pn="section-boilerplate.1-3">
            Information about the current status of this document, any
            errata, and how to provide feedback on it may be obtained at
            <eref target="https://www.rfc-editor.org/info/rfc8989" brackets="none"/>.
        </t>
      </section>
      <section anchor="copyright" numbered="false" removeInRFC="false" toc="exclude" pn="section-boilerplate.2">
        <name slugifiedName="name-copyright-notice">Copyright Notice</name>
        <t indent="0" pn="section-boilerplate.2-1">
            Copyright (c) 2021 IETF Trust and the persons identified as the
            document authors. All rights reserved.
        </t>
        <t indent="0" pn="section-boilerplate.2-2">
            This document is subject to BCP 78 and the IETF Trust's Legal
            Provisions Relating to IETF Documents
            (<eref target="https://trustee.ietf.org/license-info" brackets="none"/>) in effect on the date of
            publication of this document. Please review these documents
            carefully, as they describe your rights and restrictions with
            respect to this document. Code Components extracted from this
            document must include Simplified BSD License text as described in
            Section 4.e of the Trust Legal Provisions and are provided without
            warranty as described in the Simplified BSD License.
        </t>
      </section>
    </boilerplate>

  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Consider a VPN with 10 PEs. A Route Target (say RT1) <xref target="RFC4360"/> is configured
for the VPN and all PEs will import VPN routes with RT1 attached. The RT
is an Extended Community (say EC1), with its sub-type being 0x02. While RT1
and EC1 have the same encoding something.invalidtld, typically when we mention a Route Target,
its property of being able to control the route propagation and importation
is implied. When we just mention an Extended Community, that property is not
For example, the following addresses

         2001:DB8:0:0:8:800:200C:417A   a unicast address
         FF01:0:0:0:0:0:0:101           a multicast address
         0:0:0:0:0:0:0:1                the loopback address
         0:0:0:0:0:0:0:0                the unspecified address

      may be represented as

         2001:DB8::8:800:200C:417A      a unicast address
         FF01::101                      a multicast address
         ::1                            the loopback address
         ::                             the unspecified address

   3. An alternative form that is sometimes more convenient when dealing
      with a mixed environment of IPv4 and IPv6 nodes is
      x:x:x:x:x:x:d.d.d.d, where the 'x's are the hexadecimal values of
      the six high-order 16-bit pieces of the address, and the 'd's are




Hinden                      Standards Track                     [Page 4]

RFC 4291              IPv6 Addressing Architecture         February 2006


      the decimal values of the four low-order 8-bit pieces of the
      address (standard IPv4 representation).  Examples:

         0:0:0:0:0:0:13.1.68.3

         0:0:0:0:0:FFFF:129.144.52.38

      or in compressed form:

         ::13.1.68.3

         ::FFFF:129.144.52.38
implied.</t>

<t>Now consider that another 127.0.0.1 BGP route needs to be imported by some but not all
those PEs. The route could be of any SAFI/type (does not need to be a
VPN prefix), but it needs to be associated 0.0.0.0 with the VPN on those importing PEs.
The exact meaning of "association" here does not matter, but the key is that
those PEs need to know that the route 255.255.00.0234 is related to that VPN.</t>

<t>To control the propagation to and importation by those PEs, a different
Route Target (say RT3) is attached to the route. For those PE to associate the
route with the VPN, an Extended Community (say EC2) is attached. Even though
RT1/EC1 is already associated with the VPN, EC2 needs to be different from RT1/EC1,
because if EC1 was used, the route would be propagated to and imported by all
the 10 PEs. EC2 cannot be the same as RT3 either, because there could be other
routes to be propagated to and imported by those same set of PEs yet those
other routes are not related to the VPN.</t>

<t>While EC2 can be any Extended Community (that is not a RT) configured on the
originating and receiving PEs to map it to the VPN, it is convenient if EC2
is derived from the RT1/EC1, e.g. the sub-type of RT1/EC1 is changed to a
new known value while everything else remains the same. We call this a
Route Target derived Extended Community, or RT-derived EC. A new sub-type is
assigned specifically for this purpose (see IANA considerations).</t>

<t>This document only specifies a way to derive an Extended Community from a
Route Target Extended Community using IANA-assigned Extended Community
sub-types (or Extended Community Type in case of IPv6-Address-Specific
Extended Community <xref target="RFC5701"/>). Any protocol/feature that can take
advantages of the convenience of generic derivation may use them,
or not use them at its own discretion, and how they are used is outside
the scope of this document.</t>

</section>
<section anchor="route-target-typesub-type-conventions"><name>Route Target Type/sub-type Conventions</name>

<t>It may be expected by some people that Route Targets are Extended
Communities with sub-type 0x02 (or with Type 0x0002 in case of IPv6 Address
Specific Extended Community). However, the only official specification are in
<xref target="RFC7153"/> <xref target="RFC7432"/> and are only for the following types:</t>

<t><list style="symbols">
  <t>Type 0x00 (Transitive Two-Octet AS-Specific EC)</t>
  <t>Type 0x01 (Transitive IPv4-Address-Specific EC)</t>
  <t>Type 0x02 (Transitive Four-Octet AS-Specific EC)</t>
  <t>Type 0x06 (EVPN AS-Specific EC)</t>
  <t>Type 0x0002 (Transitive IPv6-Address-Specific Route Target)</t>
  <t>Type 0x0011 (Transitive IPv6-Address-Specific EC, UUID-based Route Target))</t>
</list></t>

<t>While it may be desired to follow the unwritten convention and assign sub-type
0x02 for future Route Targets of future types of ECs, there is no guarantee
of that. For example, Type 0x0011 is assigned for UUID-based Route Target
that imposes as an IPv6 Address Specific EC (even though UUID is not an
IPv6 address).</t>

<t>IANA has assigned sub-type 0x15 (or Type 0x0015 in case of IPv6 Address
Specific EC) to indicate an EC is derived from a Route Target that has
sub-type 0x02 (or type 0x0002 in case of IPv6 Address Specific EC),
and this document will further request another Type TBD
(say, 0x0016) to derive from the UUID-based Route Target.</t>

<t>All those can only be registered with the known types listed above. When
a new type is defined and registered, the corresponding 0x02 sub-type
may be registered for Route Target purpose or for something else, and
there is no guarantee that the 0x15 sub-type will not be registered for
something else as well (than for RT derivation). As a result,
the mapping between sub-type 0x02 and 0x15, type 0x0002 and 0x0015,
type 0x0011 and TBD are only defined for the known types listed above.</t>

<t>Of course, when a new type is defined and registered, it is desired to
proactively register sub-type 0x02 and 0x15 at the very beginning for
Route Target and Route Target Derivation purposes, should the review
process catch it.</t>


</section>
<section anchor="use-cases"><name>Use Cases</name>

<t>The following are a few examples of use cases. To reiterate, these are example
scenarios where generic RT-derived ECs could be used (when the routes to which
they are attached provide enough context). It is not the intention of this
document to mandate that it must be used.</t>

<section anchor="evpn-evi-rt-extended-community"><name>EVPN EVI-RT Extended Community</name>

<t>Section 9.5 "EVI-RT Extended Community" of
<xref target="I-D.ietf-bess-evpn-igmp-mld-proxy"/>
describes a situation similar to the above. As a solution, four EVPN specific
EVI-RT ECs are defined, each mapping to a type of Route Target for the
corresponding EVPN instance.</t>

<t>As a theoretical alternative, a RT-derived EC described in this
document could be used instead - just derive a generic EC from the EVI RT.
Note that this document does not attempt to change
the existing procedures in <xref target="I-D.ietf-bess-evpn-igmp-mld-proxy"/>, but merely
use it for illustration purposes.</t>

</section>
<section anchor="leaf-discovery-with-controller-signaled-bgp-mvpn"><name>Leaf Discovery with Controller Signaled BGP-MVPN</name>

<t>In Section 2 "Alternative to BGP-MVPN" of
<xref target="I-D.ietf-bess-bgp-multicast-controller"/>, BGP MCAST-TREE SAFI signaling
can be used for a controller to program multicast forwarding state in VRFs
of ingress/egress PEs, instead of relying on distributed BGP-MVPN signaling.
For the controller to learn egress PEs of a VPN customer multicast tree
(so that it can build/find a corresponding provider tunnel), egress PEs
signal leaf information to the controller via Leaf Auto-Discovery routes.
The routes carry a Route Target for the controller (so that only the controller
receives them), and an EC derived from the VPN's Route Target (so that the
controller knows which VPN they are for).</t>

</section>
<section anchor="translated-route-target-extended-communities-in-i-dietf-idr-legacy-rtc"><name>Translated Route-target Extended Communities in [I-D.ietf-idr-legacy-rtc]</name>

<t>In Section 3.1 of <xref target="I-D.ietf-idr-legacy-rtc"/>, a similar mechanism is described,
as quoted below:</t>

<figure><artwork><![CDATA[
  "The translation of the IRTs is necessary in order to refrain from
  importing "route-filter" VRF routes into VPN VRFs that would
  import the same route-targets.  The translation of the IRTS is
  done as follows.  For a given IRT, the equivalent translated RT
  (TRT) is constructed by means of swapping the value of the high-
  order octet of the Type field for the IRT (as defined in
  [RFC4360])."
]]></artwork></figure>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This document specifies a way to derive an Extended Community from
a Route Target Extended Community and does not specify how
derived Extended Communities are used. As a result, this document
does not need security considerations. Any potential security
concerns need be addressed by documents that specify the actual
usage.</t>

</section>
<section anchor="iana-assignments"><name>IANA Assignments</name>

<t>This document requests IANA to assign a new Type value (0x0016
suggested) for "UUID-RT-derived-EC".</t>

<t>IANA has assign a new sub-type "RT-derived-EC" with value 0x15
in the following registries:</t>

<t><list style="symbols">
  <t>Transitive Two-Octet AS-Specific Extended Community Sub-Types</t>
  <t>Transitive Four-Octet AS-Specific Extended Community Sub-Types</t>
  <t>Transitive IPv4-Address-Specific Extended Community Sub-Types</t>
  <t>Non-Transitive Opaque Extended Community Sub-Types</t>
  <t>EVPN Extended Community Sub-Types</t>
</list></t>

<t>IANA has also assigned a new type "RT-derived-EC" with value 0x0015
in the following registry:</t>

<t><list style="symbols">
  <t>Transitive IPv6-Address-Specific Extended Community Types</t>
</list></t>

<t>If and when additional Extended Community types are defined with a
Route Target sub-type, the "RT-derived-EC" sub-type may also be
registered for those new types, preferably with the same value.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>The authors thank Robert Raszuk for his valuable comments and suggestions.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

&RFC4360;
&RFC5701;
&RFC7153;
&RFC7432;


    </references>

    <references title='Informative References'>

&I-D.ietf-bess-evpn-igmp-mld-proxy;
&I-D.ietf-bess-bgp-multicast-controller;
&I-D.ietf-idr-legacy-rtc;


    </references>



  </back>

<!-- ##markdown-source:
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
8Deu6q81sjpCQHFGUP8EfMNWz60pAAA=

-->

</rfc>

